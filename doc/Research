Shading:

Basic fragment color equation:

Color = Ambient * diffuse * specular * diffuseColor

Lambert diffuse:

Lambert diffuse is used in almost all games because its quick and
gives good results. There are other diffuse reflections functions,
but they are not really worth the extra cost. (differences in how
not shiny an object is hard to see)

Id = (L.N)*C*Il

Id = the intesity of the reflected light
L = the normalized light direction pointing from the surfuce to the light source
N = the normal vector of the surface
C = the color of the light

Not that hard really

Cook-Torrance specular

So Cook Torrance is somewhat more diffecult.
The basic function is as follow:
f = (D * F * G) / (4 * (N.L) * (N.V));

where:
f = the specular
N = the normal vector of the surface
L = the normalized light direction pointing from the surfuce to the light source
V = the normalized viewer direction pointing from the surfuce to the camera

So far so good however we the D,F and G ar not yet explained Soooo:
D = the normal distribution function
F = the fresnel factor 
G = the Geometry shadowing term 

Each of these functions have there own model or approximations.

For the following formulas 

a = roughnes ^ 2

=== the normal distribution function:
GGX/Trowbridge-reitz

D = (a^2) / (PI((n.m)^2 (a^2 - 1) + 1)^2

Where m = h = cross between the light dir and the view dir

=== Geometric shadowing

Smith:
    Smiths formula does not take two variables but
    one variable two times

Smith-Schlick-GGX:
    G 1,2 =(n.v) / (n.v)(1-k) + k

    Where k = a/2 !! Might need remapping !!
    v = Either L or V

    Final G = G1 * G2;

=== Fresnel Factor

F = F0 + (1 - F0)(1 - (v.h))^5

## Metalness

A Metals do not refract light thus there is no diffuse thus metalness
parameter should be an interpolation between diffuse and no diffuse 

For more info:
www.graphicrants.blogspot.fr/2013/08/specular-brdf-reference.html


